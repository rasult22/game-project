<section class="relative z-[5]">
  <style>
    .card {
      transition: all 0.3s;
      box-shadow: 0px 0px 20px 0px #1DA1F2;
      width: 400px;
      height: 520px;
    }
    .card.active-slider {
      width: 500px;
      height: 650px;
      opacity: 1;
    }
    .card:not(.active) {
      opacity: 1;
    }
    .card-sublock {
      opacity: 0;
    }
    .card.active-slider .card-sublock {
      opacity: 1;
    }
    @media (max-width: 500px) {
      .card {
        width: 280px;
        height: 364px;
      }
      .card.active-slider {
        width: 350px;
        height: 455px;
      }
    }
  </style>
</section>
<section
  class="relative z-[5] mx-auto max-w-[2164px] px-4 pt-[199px] sm:pt-[96px] md:pt-[96px]"
>
  <div class="mx-auto max-w-[800px] text-center sm:hidden">
    <h2 class="font-Poppins text-[64px] font-semibold md:text-[32px]">
      <span class="app-text-gradient-bg bg-clip-text text-transparent">
        Companions
      </span>
    </h2>
    <div class="mt-[40px] text-[20px] md:mt-[24px] md:text-[17px]">
      Users are provided with various types of companions where each has
      different avatars – not only natural but animated appearances as well.
    </div>
  </div>
</section>
<div
  id="companions-slider"
  class="relative z-[5] mt-[40px] min-w-[4000px] sm:mt-0"
>
  <div
    id="slider"
    class="flex min-h-[700px] items-center justify-start space-x-10 sm:min-h-[500px]"
  >
    <div
      data-index="0"
      class="card active-slider flex cursor-pointer items-end justify-center overflow-hidden rounded-[36px] bg-[url(/optimized/p1.webp)] bg-contain text-center"
    >
      <div
        class="card-sublock w-full rounded-b-[24px] border-t border-white border-opacity-30 bg-[rgba(20,26,33,0.3)] p-4 backdrop-blur-[25.99388313293457px] transition-all sm:p-2"
      >
        <div class="text-[48px] sm:text-[24px]">Diana</div>
        <div
          class="mt-[12px] inline w-auto rounded-[100px] border border-white border-opacity-20 bg-[rgba(255,255,255,0.2)] px-4 py-2 text-[24px] text-[#B2BAC8] backdrop-blur-[12.5px] sm:px-2 sm:py-1 sm:text-[16px]"
        >
          Biology teacher
        </div>
        <div class="mt-[30px] mb-[15px] sm:my-[16px] sm:mb-[15px] sm:text-[14px]">
          – I can help to study biology better
        </div>
      </div>
    </div>
    <div
      class="card flex cursor-pointer items-end justify-center overflow-hidden rounded-[36px] bg-[url(/optimized/p2.webp)] bg-contain text-center"
      data-index="1"
    >
      <div
        class="card-sublock w-full rounded-b-[24px] border-t border-white border-opacity-30 bg-[rgba(20,26,33,0.3)] p-4 backdrop-blur-[25.99388313293457px] transition-all sm:p-2"
      >
        <div class="text-[48px] sm:text-[24px]">Maria</div>
        <div
          class="mt-[12px] inline w-auto rounded-[100px] border border-white border-opacity-20 bg-[rgba(255,255,255,0.2)] px-4 py-2 text-[24px] text-[#B2BAC8] backdrop-blur-[12.5px] sm:px-2 sm:py-1 sm:text-[16px]"
        >
        Personal doctor
        </div>
        <div class="mt-[30px] mb-[15px] sm:mt-[16px] sm:text-[14px]">
          – I can give you tips on improving your health
        </div>
      </div>
    </div>
    <div
      class="card flex cursor-pointer items-end justify-center overflow-hidden rounded-[36px] bg-[url(/optimized/p3.webp)] bg-contain text-center"
      data-index="2"
    >
      <div
        class="card-sublock w-full rounded-b-[24px] border-t border-white border-opacity-30 bg-[rgba(20,26,33,0.3)] p-4 backdrop-blur-[25.99388313293457px] transition-all sm:p-2"
      >
        <div class="text-[48px] sm:text-[24px]">Lana</div>
        <div
          class="mt-[12px] inline w-auto rounded-[100px] border border-white border-opacity-20 bg-[rgba(255,255,255,0.2)] px-4 py-2 text-[24px] text-[#B2BAC8] backdrop-blur-[12.5px] sm:px-2 sm:py-1 sm:text-[16px]"
        >
        Your best friend
        </div>
        <div class="mt-[30px] mb-[15px] sm:mt-[16px] sm:text-[14px]">
          – I could listen to your all stories 
        </div>
      </div>
    </div>
    <div
      class="card flex cursor-pointer items-end justify-center overflow-hidden rounded-[36px] bg-[url(/optimized/p4.webp)] bg-contain text-center"
      data-index="3"
    >
      <div
        class="card-sublock w-full rounded-b-[24px] border-t border-white border-opacity-30 bg-[rgba(20,26,33,0.3)] p-4 backdrop-blur-[25.99388313293457px] transition-all sm:p-2"
      >
        <div class="text-[48px] sm:text-[24px]">Max</div>
        <div
          class="mt-[12px] inline w-auto rounded-[100px] border border-white border-opacity-20 bg-[rgba(255,255,255,0.2)] px-4 py-2 text-[24px] text-[#B2BAC8] backdrop-blur-[12.5px] sm:px-2 sm:py-1 sm:text-[16px]"
        >
          Gym trainer
        </div>
        <div class="mt-[30px] mb-[15px] sm:mt-[16px] sm:text-[14px]">
          – We can pump up your body together
        </div>
      </div>
    </div>
    <div
      class="card flex cursor-pointer items-end justify-center overflow-hidden rounded-[36px] bg-[url(/optimized/p5.webp)] bg-contain text-center"
      data-index="4"
    >
      <div
        class="card-sublock w-full rounded-b-[24px] border-t border-white border-opacity-30 bg-[rgba(20,26,33,0.3)] p-4 backdrop-blur-[25.99388313293457px] transition-all sm:p-2"
      >
        <div class="text-[48px] sm:text-[24px]">Emilie</div>
        <div
          class="mt-[12px] inline w-auto rounded-[100px] border border-white border-opacity-20 bg-[rgba(255,255,255,0.2)] px-4 py-2 text-[24px] text-[#B2BAC8] backdrop-blur-[12.5px] sm:px-2 sm:py-1 sm:text-[16px]"
        >
          Stylist
        </div>
        <div class="mt-[30px] mb-[15px] sm:mt-[16px] sm:text-[14px]">
          – You’ll be the most stylish person with me
        </div>
      </div>
    </div>
    <div
      class="card flex cursor-pointer items-end justify-center overflow-hidden rounded-[36px] bg-[url(/optimized/p6.webp)] bg-contain text-center"
      data-index="5"
    >
      <div
        class="card-sublock w-full rounded-b-[24px] border-t border-white border-opacity-30 bg-[rgba(20,26,33,0.3)] p-4 backdrop-blur-[25.99388313293457px] transition-all sm:p-2"
      >
        <div class="text-[48px] sm:text-[24px]">Milana</div>
        <div
          class="mt-[12px] inline w-auto rounded-[100px] border border-white border-opacity-20 bg-[rgba(255,255,255,0.2)] px-4 py-2 text-[24px] text-[#B2BAC8] backdrop-blur-[12.5px] sm:px-2 sm:py-1 sm:text-[16px]"
        >
        Travel expert
        </div>
        <div class="mt-[30px] mb-[15px] sm:mt-[16px] sm:text-[14px]">
          – Let's  discuss the next country to visit?
        </div>
      </div>
    </div>
    <div
      class="card flex cursor-pointer items-end justify-center overflow-hidden rounded-[36px] bg-[url(/optimized/p7.webp)] bg-contain text-center"
      data-index="6"
    >
      <div
        class="card-sublock w-full rounded-b-[24px] border-t border-white border-opacity-30 bg-[rgba(20,26,33,0.3)] p-4 backdrop-blur-[25.99388313293457px] transition-all sm:p-2"
      >
        <div class="text-[48px] sm:text-[24px]">Annete</div>
        <div
          class="mt-[12px] inline w-auto rounded-[100px] border border-white border-opacity-20 bg-[rgba(255,255,255,0.2)] px-4 py-2 text-[24px] text-[#B2BAC8] backdrop-blur-[12.5px] sm:px-2 sm:py-1 sm:text-[16px]"
        >
        Music expert
        </div>
        <div class="mt-[30px] mb-[15px] sm:mt-[16px] sm:text-[14px]">
          Let's discuss your favorite artist's new album
        </div>
      </div>
    </div>
    <div
      class="card flex cursor-pointer items-end justify-center overflow-hidden rounded-[36px] bg-[url(/optimized/p8.webp)] bg-contain text-center"
      data-index="7"
    >
      <div
        class="card-sublock w-full rounded-b-[24px] border-t border-white border-opacity-30 bg-[rgba(20,26,33,0.3)] p-4 backdrop-blur-[25.99388313293457px] transition-all sm:p-2"
      >
        <div class="text-[48px] sm:text-[24px]">John</div>
        <div
          class="mt-[12px] inline w-auto rounded-[100px] border border-white border-opacity-20 bg-[rgba(255,255,255,0.2)] px-4 py-2 text-[24px] text-[#B2BAC8] backdrop-blur-[12.5px] sm:px-2 sm:py-1 sm:text-[16px]"
        >
        Business coach
        </div>
        <div class="mt-[30px] mb-[15px] sm:mt-[16px] sm:text-[14px]">
          – Have a business plan ready? Let's evaluate it!
        </div>
      </div>
    </div>
  </div>
</div>
<div class="relative z-[5] mt-8 flex justify-center space-x-6 sm:mt-2">
  <button
    id="prev-btn"
    class="flex items-center justify-center rounded-full bg-[#0D2C40] p-3 hover:opacity-65"
  >
    <img src="/right.svg" alt="" />
  </button>
  <button
    id="next-btn"
    class="flex items-center justify-center rounded-full bg-[#0D2C40] p-3 hover:opacity-65"
  >
    <img class="translate-x-1 rotate-180" src="/right.svg" alt="" />
  </button>
</div>
<script>
  import { animate } from "motion";
  import swipeDetect from "swipe-detect";
  const innerW = window.innerWidth;
  const gap = 40; // gap between cards
  const CARD_WIDTH = innerW < 500 ? 280 : 400; // small card width
  const CARD_WIDTH_SCALED = innerW < 500 ? 350 : 500; // big card width
  const FIRST_CARD = innerW / 2 - CARD_WIDTH_SCALED / 2;
  const slider = document.querySelector("#slider");
  const cards = document.querySelectorAll(".card");

  if (slider) {
    animate(slider, {
      transform: [`translateX(${FIRST_CARD}px)`],
    });
  }
  applyListeners();

  if (innerW < 600) {
    applySwipeControls();
  }
  /**
   * Calculates the offset based on the given index and animates the slider.
   *
   * @param {number} index - The index for which to calculate the offset.
   * @returns {void}
   */
  function calculateOffset(index) {
    if (index === 0) {
      const zero_index_width = innerW / 2 - CARD_WIDTH_SCALED / 2;
      animate(slider, {
        transform: [`translateX(${zero_index_width}px)`],
      });
    } else {
      const indexed_width =
        innerW / 2 - (CARD_WIDTH_SCALED / 2 + gap * index + CARD_WIDTH * index);
      animate(slider, {
        transform: [`translateX(${indexed_width}px)`],
      });
    }
  }

  /**
   * Adds event listeners to the previous and next buttons, as well as the cards, to handle slider navigation.
   *
   * The function ensures that the slider navigates correctly based on user interactions with the buttons and cards.
   * It also updates the active slider element and calculates the appropriate offset for the slider.
   *
   * @returns {void}
   */
  function applyListeners() {
    const prevBtn = document.querySelector("#prev-btn");
    const nextBtn = document.querySelector("#next-btn");
    if (prevBtn && nextBtn) {
      prevBtn.addEventListener("click", function () {
        const activeEl = document.querySelector(".active-slider");
        if (activeEl) {
          const index = activeEl.getAttribute("data-index");
          if (index) {
            const i = parseInt(index);
            if (i === 0) return;
            cards.forEach((c) => c.classList.remove("active-slider"));
            const prev = document.querySelector(`.card[data-index="${i - 1}"]`);
            prev?.classList.add("active-slider");
            calculateOffset(i - 1); // go to prev el
          }
        }
      });
      nextBtn.addEventListener("click", function () {
        const activeEl = document.querySelector(".active-slider");
        if (activeEl) {
          const index = activeEl.getAttribute("data-index");
          if (index) {
            const i = parseInt(index);
            if (i === 7) return;
            cards.forEach((c) => c.classList.remove("active-slider"));
            const next = document.querySelector(`.card[data-index="${i + 1}"]`);
            next?.classList.add("active-slider");
            calculateOffset(i + 1); // go to next el
          }
        }
      });
    }
    cards.forEach((card) => {
      card.addEventListener("click", () => {
        cards.forEach((c) => c.classList.remove("active-slider"));
        card.classList.add("active-slider");
        const indexStr = card.getAttribute("data-index");
        const index = parseInt(indexStr);
        calculateOffset(index);
      });
    });
  }
  /**
   * Applies swipe controls to the slider.
   * Detects swipe direction and navigates the slider accordingly.
   */
  function applySwipeControls() {
    swipeDetect(
      slider,
      (d) => {
        if (d === "left") {
          const activeEl = document.querySelector(".active-slider");
          if (activeEl) {
            const index = activeEl.getAttribute("data-index");
            if (index) {
              const i = parseInt(index);
              if (i === 7) return;
              cards.forEach((c) => c.classList.remove("active-slider"));
              const next = document.querySelector(
                `.card[data-index="${i + 1}"]`,
              );
              next?.classList.add("active-slider");
              calculateOffset(i + 1); // go to next el
            }
          }
        } else {
          const activeEl = document.querySelector(".active-slider");
          if (activeEl) {
            const index = activeEl.getAttribute("data-index");
            if (index) {
              const i = parseInt(index);
              if (i === 0) return;
              cards.forEach((c) => c.classList.remove("active-slider"));
              const prev = document.querySelector(
                `.card[data-index="${i - 1}"]`,
              );
              prev?.classList.add("active-slider");
              calculateOffset(i - 1); // go to prev el
            }
          }
        }
      },
      150,
    );
  }
</script>
